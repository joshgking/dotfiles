#! /bin/bash

echo "UPDATING APT INDEX"
sudo apt update

if [[ -n $(which curl) ]]; then
    echo "Curl installed"
else
    read -p "Install Curl? (required to continue) [yq]" doCurl
    if [[ $doCurl = "y" ]]; then
        echo "INSTALLING CURL"
        sudo apt install curl
    elif [[ $doCurl = "q" ]]; then
        exit 0
    fi
fi

if [[ -n $(which git) ]]; then
    echo "Git installed"
else
    read -p "Install Git? (required to continue) [yq]" doGit
    if [[ $doGit = "y" ]]; then
        echo "INSTALLING GIT"
        sudo apt install git
    elif [[ $doGit = "q" ]]; then
        exit 0
    fi
fi

if [[ (-n $(which ruby)) || (-n $(which gem)) ]]; then
    echo "Ruby installed"
else
    read -p "Install Ruby? (required to continue) [yq]" doRuby
    if [[ $doRuby = "y" ]]; then
        echo "INSTALLING RUBY"
        sudo apt install ruby-full
    elif [[ $doRuby = "q" ]]; then
        exit 0
    fi
fi

if [[ -n $(which rake) ]]; then
    echo "Rake installed"
else
    read -p "Install Rake? (required to continue) [yq]" doRake
    if [[ $doRake = "y" ]]; then
        echo "INSTALLING RAKE"
        sudo apt install ruby-full
    elif [[ $doRake = "q" ]]; then
        exit 0
    fi
fi

rake install
rake_status=$?

if [[ $rake_status = 0 ]]; then
    if ! [[ $PATH =~ (?:^|:)(\/usr\/local\/bin)(?:$|:) ]]; then
        echo "Adding /usr/local/bin to PATH"
        export PATH=/usr/local/bin:$PATH
    fi

    if [[ -n $(which python3) ]]; then
        echo "Python installed"
    else
        read -p "Install Python? [ynq]" doPy
        if [[ $doPy = "y" ]]; then
            echo "INSTALLING PYTHON 3"
            sudo apt install python3
        elif [[ $doPy = "q" ]]; then
            exit 0
        fi
    fi

    if [[ -n $(which pip3) ]]; then
        echo "Pip installed"
    else
        read -p "Install Pip? [ynq]" doPy
        if [[ $doPy = "y" ]]; then
            echo "INSTALLING pip3"
            sudo apt install python3-pip
        elif [[ $doPy = "q" ]]; then
            exit 0
        fi
    fi

    if [[ -n $(which pipx) ]]; then
        echo "Pipx installed"
    else
        read -p "Install Pipx? [ynq]" doPy
        if [[ $doPy = "y" ]]; then
            echo "INSTALLING pipx"
            pip3 install --user pipx
            source /home/jking/.zshrc
            pipx ensurepath
        elif [[ $doPy = "q" ]]; then
            exit 0
        fi
    fi

    if [[ -n $(which poetry) ]]; then
        echo "poetry installed"
    else
        read -p "Install poetry? [ynq]" doPy
        if [[ $doPy = "y" ]]; then
            echo "INSTALLING poetry"
            sudo apt install python3-venv
            pipx install poetry
        elif [[ $doPy = "q" ]]; then
            exit 0
        fi
    fi

    if [[ -n $(which n) ]]; then
        echo "n and node installed"
    else
        read -p "Install n and node? (installs build-essentials for make dependency if needed) [ynq]" doNode
        if [[ $doNode = "y" ]]; then
            if [[ -n $(which make) ]]; then
                echo "MAKE INSTALLED"
            else 
                echo "INSTALLING BUILD ESSENTIAL"
                sudo apt install build-essential
            fi
            echo "INSTALLING NODEJS AND NPM"
            curl -L https://git.io/n-install | bash
            source /home/jking/.zshrc
        elif [[ $doNode = "q" ]]; then
            exit 0
        fi
    fi

    if [[ -n $(which code) ]]; then 
        echo "VS Code installed"
    else 
        read -p "Install VS Code? [ynq]" doCode
        if [[ $doCode = "y" ]]; then
            echo "INSTALLING CODE"
            curl -L -o vscode.deb https://go.microsoft.com/fwlink/?LinkID=760868
            sudo sudo apt install ./vscode.deb
        elif [[ $doCode = "q" ]]; then
            exit 0
        fi
    fi

    if [[ -n $(ls /usr/bin | grep "gnome-terminal") ]]; then
        echo "Gnome-Terminal installed"
    else 
        read -p "Install Gnome-Terminal? [ynq]" doGnome
        if [[ $doGnome = "y" ]]; then
            echo "INSTALLING GNOME-TERMINAL"
            sudo apt install gnome-terminal
            # This is needed to show the icon in Chrome OS desktop
            cp ./gnome-terminal.desktop /usr/share/applications/
        elif [[ $doGnome = "q" ]]; then
            exit 0
        fi
    fi
else
    exit 0
fi



